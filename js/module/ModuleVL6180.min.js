class ClassBaseVL6180{constructor(_opt){if(!(_opt&&_opt.i2c instanceof I2C&&_opt.irqPin instanceof Pin))throw new err(ClassBaseVL6180.ERROR_MSG_ARG_VALUE,ClassBaseVL6180.ERROR_CODE_ARG_VALUE);this._State={channel_mode:"NOT_SET",mode:"WAIT_COMMAND"},this._IrqPin=_opt.irqPin,this._I2Cbus=_opt.i2c,this._SetWatch=null,this._WaitForRange=!1,this._Range=1/0,this._RangePeriod=this.RANGE_MIN_TIME,this._WaitForALS=!1,this._Illuminance=0,this._ALSPeriod=this.ALS_MIN_TIME,this._RangeCalibrOpt={k:1,a:0},this._ALSCalibrOpt={k:1,a:0},this.regAddr={IDENTIFICATION__MODEL_ID:0,IDENTIFICATION__MODEL_REV_MAJOR:1,IDENTIFICATION__MODEL_REV_MINOR:2,IDENTIFICATION__MODULE_REV_MAJOR:3,IDENTIFICATION__MODULE_REV_MINOR:4,IDENTIFICATION__DATE_HI:6,IDENTIFICATION__DATE_LO:7,IDENTIFICATION__TIME:8,SYSTEM__MODE_GPIO0:16,SYSTEM__MODE_GPIO1:17,SYSTEM__HISTORY_CTRL:18,SYSTEM__INTERRUPT_CONFIG_GPIO:20,SYSTEM__INTERRUPT_CLEAR:21,SYSTEM__FRESH_OUT_OF_RESET:22,SYSTEM__GROUPED_PARAMETER_HOLD:23,SYSRANGE__START:24,SYSRANGE__THRESH_HIGH:25,SYSRANGE__THRESH_LOW:26,SYSRANGE__INTERMEASUREMENT_PERIOD:27,SYSRANGE__MAX_CONVERGENCE_TIME:28,SYSRANGE__CROSSTALK_COMPENSATION_RATE:30,SYSRANGE__CROSSTALK_VALID_HEIGHT:33,SYSRANGE__EARLY_CONVERGENCE_ESTIMATE:34,SYSRANGE__PART_TO_PART_RANGE_OFFSET:36,SYSRANGE__RANGE_IGNORE_VALID_HEIGHT:37,SYSRANGE__RANGE_IGNORE_THRESHOLD:38,SYSRANGE__MAX_AMBIENT_LEVEL_MULT:44,SYSRANGE__RANGE_CHECK_ENABLES:45,SYSRANGE__VHV_RECALIBRATE:46,SYSRANGE__VHV_REPEAT_RATE:49,SYSALS__START:56,SYSALS__THRESH_HIGH:58,SYSALS__THRESH_LOW:60,SYSALS__INTERMEASUREMENT_PERIOD:62,SYSALS__ANALOGUE_GAIN:63,SYSALS__INTEGRATION_PERIOD:64,RESULT__RANGE_STATUS:77,RESULT__ALS_STATUS:78,RESULT__INTERRUPT_STATUS_GPIO:79,RESULT__ALS_VAL:80,RESULT__HISTORY_BUFFER_0:82,RESULT__HISTORY_BUFFER_1:84,RESULT__HISTORY_BUFFER_2:86,RESULT__HISTORY_BUFFER_3:88,RESULT__HISTORY_BUFFER_4:90,RESULT__HISTORY_BUFFER_5:92,RESULT__HISTORY_BUFFER_6:94,RESULT__HISTORY_BUFFER_7:96,RESULT__RANGE_VAL:98,RESULT__RANGE_RAW:100,RESULT__RANGE_RETURN_RATE:102,RESULT__RANGE_REFERENCE_RATE:104,RESULT__RANGE_RETURN_SIGNAL_COUNT:108,RESULT__RANGE_REFERENCE_SIGNAL_COUNT:112,RESULT__RANGE_RETURN_AMB_COUNT:116,RESULT__RANGE_REFERENCE_AMB_COUNT:120,RESULT__RANGE_RETURN_CONV_TIME:124,RESULT__RANGE_REFERENCE_CONV_TIME:128,RANGE_SCALER:150,READOUT__AVERAGING_SAMPLE_PERIOD:266,FIRMWARE__BOOTUP:281,FIRMWARE__RESULT_SCALER:288,I2C_SLAVE__DEVICE_ADDRESS:530,INTERLEAVED_MODE__ENABLE:675},this.Init()}static get name(){return"VL6180"}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${ClassBaseVL6180.name}`}static get ERROR_MSG_WRONG_STATE(){return`ERROR>> sensor works in another mode. ClassID: ${ClassBaseVL6180.name}`}static get ERROR_MSG_ALREDY_WORK(){return`ERROR>> sensor is already polling. Stop it first \n                                                to start new polling. ClassID: ${ClassBaseVL6180.name}`}get ALS_MIN_TIME(){return 150}get RANGE_MIN_TIME(){return 50}get IsBusy(){return this._WaitForALS||this._WaitForRange}Init(){this._address=41,this._scaling=0,this._ptpOffset=0,this._scalerValues=new Uint16Array([0,253,127,84]),this._init(),this._configureDefault(),this.SetWatch()}SetWatch(){this._SetWatch=setWatch(this.HandleIrq.bind(this),this._IrqPin,{repeat:!0,edge:"rising",debounce:10})}ResetWatch(){clearWatch(this._SetWatch),this._SetWatch=null,this._WaitForALS=!1,this._WaitForRange=!1}StartRange(_period){if("WAIT_COMMAND"!==this._State.mode)throw err(this.ERROR_MSG_ALREDY_WORK);this._RangePeriod=_period>=this.RANGE_MIN_TIME?_period:this.RANGE_MIN_TIME,this._State.channel_mode="MONO",this._State.mode="WORK_RANGE",this.CooldownedStart(()=>{this._RangeInterval=setInterval(this.UpdateRange.bind(this),_period)})}StartALS(_period){if("WAIT_COMMAND"!==this._State.mode)throw err(this.ERROR_MSG_ALREDY_WORK);this._ALSPeriod=_period>=this.ALS_MIN_TIME?_period:this.ALS_MIN_TIME,this._State.channel_mode="MONO",this._State.mode="WORK_ALS",this.CooldownedStart(()=>{this._ALSInterval=setInterval(this.UpdateIlluminance.bind(this),_period)})}StartDual(_period){if("WAIT_COMMAND"!==this._State.mode)throw err(this.ERROR_MSG_ALREDY_WORK);this._ALSPeriod=_period>=this.ALS_MIN_TIME?_period:this.ALS_MIN_TIME,this._RangePeriod=this._ALSPeriod,this._State.channel_mode="DUAL";let bool=!0;this.CooldownedStart(()=>{this._DualInterval=setInterval(()=>{bool?(this._State.mode="WORK_RANGE",this.UpdateRange()):(this._State.mode="WORK_ALS",this.UpdateIlluminance()),bool=!bool},_period)})}Stop(){this._State.mode="WAIT_COMMAND",this._State.channel_mode="NOT_SET",this._RangeInterval?(clearInterval(this._RangeInterval),this._RangeInterval=null):this._ALSInterval?(clearInterval(this._ALSInterval),this._ALSInterval=null):this._DualInterval&&(clearInterval(this._DualInterval),this._DualInterval=null);let c=5,checkFieldsTimer=setTimeout(()=>{"WAIT_COMMAND"===this._State.mode&&"NOT_SET"===this._State.channel_mode?(this._WaitForALS=!1,this._WaitForRange=!1):--c&&checkFieldsTimer()},1.2*this.ALS_MIN_TIME)}UpdateRange(){if("WAIT_COMMAND"!==this._State.mode){if("WORK_ALS"===this._State.mode&&"MONO"===this._State.channel_mode)throw new err(this.ERROR_MSG_WRONG_STATE);this._WaitForRange=!0,this._write8bit(this.regAddr.SYSRANGE__START,1),this._write8bit(this.regAddr.SYSTEM__INTERRUPT_CLEAR,1)}}UpdateIlluminance(){if("WAIT_COMMAND"!==this._State.mode){if("WORK_RANGE"===this._State.mode&&"MONO"===this._State.channel_mode)throw new err(this.ERROR_MSG_WRONG_STATE);this._WaitForALS=!0,this._write8bit(this.regAddr.SYSTEM__INTERRUPT_CLEAR,2),this._write8bit(this.regAddr.SYSALS__START,1)}}HandleRangeUpdate(){this._WaitForRange=!1;var range=this._read8bit(this.regAddr.RESULT__RANGE_VAL);this._write8bit(this.regAddr.SYSTEM__INTERRUPT_CLEAR,1),255===range&&(range=1/0),this._Range=this.CalibrateRangeValue(range)}HandleIlluminanceUpdate(){this._WaitForALS=!1;var ambient=this._read16bit(this.regAddr.RESULT__ALS_VAL);this._write8bit(this.regAddr.SYSTEM__INTERRUPT_CLEAR,2),ambient=.32*ambient/1.01,this._Illuminance=this.CalibrateALSValue(ambient)}HandleIrq(){this._WaitForALS?this.HandleIlluminanceUpdate():this._WaitForRange&&this.HandleRangeUpdate()}CooldownedStart(_function){let cooldownInterval=setInterval(()=>{this.IsBusy||(clearInterval(cooldownInterval),_function())},20)}SetALSCalibration(_k,_a){if("number"!=typeof _k||"number"!=typeof _a)throw new err(ClassRangeSensor.ERROR_MSG_ARG_VALUE,ClassRangeSensor.ERROR_CODE_ARG_VALUE);this._ALSCalibrOpt.k=_k,this._ALSCalibrOpt.a=_a}ResetALSCalibration(){this._ALSCalibrOpt.k=1,this._ALSCalibrOpt.a=0}CalibrateALSValue(_illum){return _illum*this._ALSCalibrOpt.k+this._ALSCalibrOpt.a}SetRangeCalibration(_k,_a){if("number"!=typeof _k||"number"!=typeof _a)throw new err(ClassALS.ERROR_MSG_ARG_VALUE,ClassALS.ERROR_CODE_ARG_VALUE);this._RangeCalibrOpt.k=_k,this._RangeCalibrOpt.a=_a}ResetRangeCalibration(){this._RangeCalibrOpt.k=1,this._RangeCalibrOpt.a=0}CalibrateRangeValue(_rng){return _rng*this._RangeCalibrOpt.k+this._RangeCalibrOpt.a}}ClassBaseVL6180.prototype._init=function(){if(this._ptpOffset=this._read8bit(this.regAddr.SYSRANGE__PART_TO_PART_RANGE_OFFSET),1===this._read8bit(this.regAddr.SYSTEM__FRESH_OUT_OF_RESET))this._scaling=1,this._write8bit(519,1),this._write8bit(520,1),this._write8bit(150,0),this._write8bit(151,253),this._write8bit(227,0),this._write8bit(228,4),this._write8bit(229,2),this._write8bit(230,1),this._write8bit(231,3),this._write8bit(245,2),this._write8bit(217,5),this._write8bit(219,206),this._write8bit(220,3),this._write8bit(221,248),this._write8bit(159,0),this._write8bit(163,60),this._write8bit(183,0),this._write8bit(187,60),this._write8bit(178,9),this._write8bit(202,9),this._write8bit(408,1),this._write8bit(432,23),this._write8bit(429,0),this._write8bit(255,5),this._write8bit(256,5),this._write8bit(409,5),this._write8bit(422,27),this._write8bit(428,62),this._write8bit(423,31),this._write8bit(48,0),this._write8bit(this.regAddr.SYSTEM__FRESH_OUT_OF_RESET,0);else{var s=this._read16bit(this.regAddr.RANGE_SCALER);s===this._scalerValues[3]?this._scaling=3:s===this._scalerValues[2]?this._scaling=2:this._scaling=1,this._ptpOffset*=this._scaling}},ClassBaseVL6180.prototype._write8bit=function(reg,val8bit){this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg,val8bit)},ClassBaseVL6180.prototype._write16bit=function(reg,val16bit){this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg,val16bit>>8&255,255&val16bit)},ClassBaseVL6180.prototype._write32bit=function(reg,val32bit){this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg,val32bit>>24&255,val32bit>>16&255,val32bit>>8&255,255&val32bit)},ClassBaseVL6180.prototype._read8bit=function(reg){var data;return this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg),this._I2Cbus.readFrom(this._address,1)[0]},ClassBaseVL6180.prototype._read16bit=function(reg){this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg);var data=this._I2Cbus.readFrom(this._address,2);return(data[0]<<8)+data[1]},ClassBaseVL6180.prototype._read32bit=function(reg){this._I2Cbus.writeTo(this._address,reg>>8&255,255&reg);var data=this._I2Cbus.readFrom(this._address,4);return(data[0]<<24)+(data[1]<<16)+(data[2]<<8)+data[3]},ClassBaseVL6180.prototype.setAddress=function(newAddr){this._write8bit(this.regAddr.I2C_SLAVE__DEVICE_ADDRESS,127&newAddr),this._address=newAddr},ClassBaseVL6180.prototype._configureDefault=function(){this._write8bit(this.regAddr.SYSTEM__MODE_GPIO1,48),this._write8bit(this.regAddr.READOUT__AVERAGING_SAMPLE_PERIOD,48),this._write8bit(this.regAddr.SYSALS__ANALOGUE_GAIN,70),this._write8bit(this.regAddr.SYSRANGE__VHV_REPEAT_RATE,255),this._write16bit(this.regAddr.SYSALS__INTEGRATION_PERIOD,99),this._write8bit(this.regAddr.SYSRANGE__VHV_RECALIBRATE,1),this._write8bit(this.regAddr.SYSRANGE__INTERMEASUREMENT_PERIOD,9),this._write8bit(this.regAddr.SYSALS__INTERMEASUREMENT_PERIOD,49),this._write8bit(this.regAddr.SYSTEM__INTERRUPT_CONFIG_GPIO,36),this._write8bit(this.regAddr.SYSRANGE__MAX_CONVERGENCE_TIME,49),this._write8bit(this.regAddr.INTERLEAVED_MODE__ENABLE,0),this.setScaling(1)},ClassBaseVL6180.prototype.setScaling=function(newScaling){var DefaultCrosstalkValidHeight=20;if(!(newScaling<1||newScaling>3)){this._scaling=newScaling,this._write16bit(this.regAddr.RANGE_SCALER,this._scalerValues[this._scaling]),this._write8bit(this.regAddr.SYSRANGE__PART_TO_PART_RANGE_OFFSET,this._ptpOffset/this._scaling),this._write8bit(this.regAddr.SYSRANGE__CROSSTALK_VALID_HEIGHT,20/this._scaling);var rce=this._read8bit(this.regAddr.SYSRANGE__RANGE_CHECK_ENABLES);this._write8bit(this.regAddr.SYSRANGE__RANGE_CHECK_ENABLES,254&rce|1===this._scaling)}};class ClassVL6180 extends ClassBaseVL6180{constructor(_opt){super(_opt)}get Range(){return this._Range<0?0:this._Range>200?1/0:this._Range}get RangeInSm(){return this.Range/10}get RangeInM(){return this.Range/1e3}get RangeInInch(){return this.Range/25.4}get Illuminance(){return this._Illuminance}}exports={ClassBaseVL6180:ClassBaseVL6180,ClassVL6180:ClassVL6180};